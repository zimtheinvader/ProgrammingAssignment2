source('~/Dropbox/Coursera/R-Programming/work/wk2/corr.R')
getwd()
swirl()
library(swirl)
swirl()
swirl()
x[c(3,5,7),]
x[c(3,5,7)]
x[0]
x[300]
x[3000]
x[-c(2,10)]
x[c(-2,-10)]
x[-c(2,10)]
vect<-c(foo=11,bar=2,norf=NA)
v
vect
names(vect)
vect2<-c(11,2,NA)
names(vect2)<-c('foo','bar','norf')
identical(vect,vect2)
vect['bar']
vect[c('foo','bar')]
head(flags)
dim(flags)
viewinfo()
class(flags)
cls_list<-lapply(flags,class)
cls_list
class(cls_list)
as.character(cls_list)
cls_vect<-sapply(flags,class)
class(cls_vect)
sum(flags$orange)
flag_colors<-flags[,11:17]
head(flag_colors)
lapply(flag_colors,sum)
sapply(flag_colors,sum)
sapply(flag_colors,mean)
flag_shapes<-flags[,19:23]
lapply(flag_shapes,range)
shape_mat<-sapply(flags,range)
shape_mat<-sapply(flag_shapes,range)
shape_mat
class(shape_mat)
unique(c(3,4,5,5,5,6,6))
unique_vals<-lapply(flags,unique)
unique_vals
sapply(unique_vals,length)
sapply(flags,unique)
lapply(unique_vals, function(elem) elem[2])
sapply(flags)
sapply(flags,unique)
play()
quit()
getwd()
setwd("/Users/patrickf/Dropbox/Coursera/R-Programming/work/wk3/ProgAss2")
source('~/Dropbox/Coursera/R-Programming/work/wk3/ProgAss2/cachematrix.R')
library(MASS)
k <- 2000
rho <- 0.3
S <- matrix(rep(rho, k*k), nrow = k)
diag(S) <- 1
dat <- mvrnorm(10000, mu=rep(0,k), Sigma=S)
R <- cor(dat)
CR <-makeCacheMatrix(R)
identical(R, CR$get())
CR$getinverse()
system.time(CRI <- solve(CR))
system.time(CRI <- cacheSolve(R))
system.time(RI <- solve(R))
system.time(CRI <- cacheSolve(CR))
identical(RI, CRI)
system.time(RI <- solve(R))
system.time(CRI <- cacheSolve(CR))
identical(RI, CRI)
CR$getinverse()[1:10]
RI[1:10]
source('~/Dropbox/Coursera/R-Programming/work/wk3/ProgAss2/cachematrix.R')
source('~/Dropbox/Coursera/R-Programming/work/wk3/ProgAss2/cachematrix.R')
quit()
